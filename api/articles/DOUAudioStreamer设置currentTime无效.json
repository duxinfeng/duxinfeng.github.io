{"title":"DOUAudioStreamer设置currentTime无效","uid":"77246563c623db281039bf443300c37b","slug":"DOUAudioStreamer设置currentTime无效","date":"2016-01-30T16:43:44.000Z","updated":"2020-03-11T15:34:43.000Z","comments":true,"path":"api/articles/DOUAudioStreamer设置currentTime无效.json","keywords":null,"cover":null,"content":"<h3 id=\"关于DOUAudioStreamer\"><a href=\"#关于DOUAudioStreamer\" class=\"headerlink\" title=\"关于DOUAudioStreamer\"></a>关于DOUAudioStreamer</h3><p>DOUAudioStreamer是基于豆瓣团队Core Audio实现的用于iOS/Mac的开源流媒体播放引擎。代码托管地址：<a href=\"https://github.com/douban/DOUAudioStreamer\">https://github.com/douban/DOUAudioStreamer</a></p>\n<h3 id=\"示例Demo\"><a href=\"#示例Demo\" class=\"headerlink\" title=\"示例Demo\"></a>示例Demo</h3><p>1、官方有个demo:<a href=\"https://github.com/douban/DOUAudioStreamer/tree/master/example/DOUASDemo\">https://github.com/douban/DOUAudioStreamer/tree/master/example/DOUASDemo</a><br>2、另一个功能比较完善的demo:<a href=\"https://github.com/Aufree/ESTMusicPlayer\">https://github.com/Aufree/ESTMusicPlayer</a></p>\n<h3 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h3><p>因为需求问题，我需要在初始化DOUAudioStreamer对象时，就去设置currentTime属性：</p>\n<pre><code>_streamer = [DOUAudioStreamer streamerWithAudioFile:track];\n_streamer.currentTime = 10.0; \n[_streamer play];\n</code></pre>\n<p>然而，这并不像我们相信那样，从10s的时候开始播放。</p>\n<h3 id=\"猥琐的解决办法\"><a href=\"#猥琐的解决办法\" class=\"headerlink\" title=\"猥琐的解决办法\"></a>猥琐的解决办法</h3><p>当然如果你正常的播放音频文件，然后拖动滑动条从某个时间点开始播放是没有问题的，完全正常。也就是说streamer在play之前有个加载音频文件的缓冲时间。所以想到一个比较猥琐的办法，</p>\n<pre><code>_streamer = [DOUAudioStreamer streamerWithAudioFile:track];\n[_streamer play];\n[NSThread sleepForTimeInterval:0.5];\n_audioStreamer.currentTime = 10.0;\n</code></pre>\n<p>嗯，貌似草草的解决了。</p>\n<p>如果看过demo的知道，demo里会有几个KVO的方法，其中有一个是监听 <code>updateSliderValue</code>方法，监听_audioStreamer当前播放进度。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">- (void)removeStreamerObserver &#123;\n    [_audioStreamer removeObserver:self forKeyPath:@&quot;status&quot;];\n    [_audioStreamer removeObserver:self forKeyPath:@&quot;duration&quot;];\n    [_audioStreamer removeObserver:self forKeyPath:@&quot;bufferingRatio&quot;];\n&#125;\n\n- (void)addStreamerObserver &#123;\n    [_audioStreamer addObserver:self forKeyPath:@&quot;status&quot; options:NSKeyValueObservingOptionNew context:kStatusKVOKey];\n    [_audioStreamer addObserver:self forKeyPath:@&quot;duration&quot; options:NSKeyValueObservingOptionNew context:kDurationKVOKey];\n    [_audioStreamer addObserver:self forKeyPath:@&quot;bufferingRatio&quot; options:NSKeyValueObservingOptionNew context:kBufferingRatioKVOKey];\n&#125;\n\n- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context &#123;\n    if (context &#x3D;&#x3D; kStatusKVOKey) &#123;\n        [self performSelector:@selector(updateStatus)\n                     onThread:[NSThread mainThread]\n                   withObject:nil\n                waitUntilDone:NO];\n    &#125; else if (context &#x3D;&#x3D; kDurationKVOKey) &#123;\n        [self performSelector:@selector(updateSliderValue:)\n                     onThread:[NSThread mainThread]\n                   withObject:nil\n                waitUntilDone:NO];\n    &#125; else if (context &#x3D;&#x3D; kBufferingRatioKVOKey) &#123;\n        [self performSelector:@selector(updateBufferingStatus)\n                     onThread:[NSThread mainThread]\n                   withObject:nil\n                waitUntilDone:NO];\n    &#125; else &#123;\n        [super observeValueForKeyPath:keyPath ofObject:object change:change context:context];\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以又意淫出另外一个方法，如果<code> self.audioStreamer.currentTime &lt; 10</code>, 我就设置<code>            self.audioStreamer.currentTime = 10;</code>,</p>\n<p>初始化</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">_streamer &#x3D; [DOUAudioStreamer streamerWithAudioFile:track];\n\t[_streamer play];<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>然后，在updateSliderValue方法里做判断</p>\n<pre><code> if (self.audioStreamer.currentTime&lt;10)\n &#123;\n      self.audioStreamer.currentTime = 10;\n &#125;\n</code></pre>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>当然遇到这样问题，也去Github上提交了issue(<a href=\"https://github.com/douban/DOUAudioStreamer/issues/102\">https://github.com/douban/DOUAudioStreamer/issues/102</a>)，但是一直没有回复，也没有精力去研究源码，改一改，也没用那水平，所以就这样解决了。</p>\n<p>也想过找另外类似的播放引擎，确实找打一个StreamingKit：<a href=\"https://github.com/tumtumtum/StreamingKit\">https://github.com/tumtumtum/StreamingKit</a><br>确实也简单易用，但是和DOUAudioStreamer存在同样的问题，最终还是选择了DOUAudioStreamer。</p>\n","text":"关于DOUAudioStreamerDOUAudioStreamer是基于豆瓣团队Core Audio实现的用于iOS/Mac的开源流媒体播放引擎。代码托管地址：https://github.com/douban/DOUAudioStreamer 示例Demo1、官方有个demo...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"iOS","slug":"iOS","count":37,"path":"api/categories/iOS.json"}],"tags":[{"name":"DOUAudioStreamer","slug":"DOUAudioStreamer","count":1,"path":"api/tags/DOUAudioStreamer.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8EDOUAudioStreamer\"><span class=\"toc-text\">关于DOUAudioStreamer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8BDemo\"><span class=\"toc-text\">示例Demo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">遇到的问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8C%A5%E7%90%90%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95\"><span class=\"toc-text\">猥琐的解决办法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8E%E8%AE%B0\"><span class=\"toc-text\">后记</span></a></li></ol>","author":{"name":"新风作浪","slug":"blog-author","avatar":"http://qiniu.niuxtech.cn/avatar.png","link":"/","description":"专注于你能控制的","socials":{"github":"https://github.com/duxinfeng","twitter":"https://twitter.com/iduxinfeng","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/duxinfeng2010","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"碎碎念在2016年2月2日","uid":"4849a9e5e35f0f9673b18ac134e61377","slug":"碎碎念在2016年2月2日","date":"2016-02-02T07:41:23.000Z","updated":"2020-03-11T12:48:35.000Z","comments":true,"path":"api/articles/碎碎念在2016年2月2日.json","keywords":null,"cover":null,"text":"有一段时间没叨叨了，临时改变行程，决定明天回家，火车票没抢到合适的，搭坐滴滴顺风车，希望明天顺利，能当天到！ 因为堂弟结婚2月4日结婚，本来想着年底火车票不好买，所以不赶了，但是家里很希望我能回去，于是我就动摇了。2月3日回家。 越到走前心里感觉还是没做好准备，还没收拾，好像有事...","link":"","photos":[],"count_time":{"symbolsCount":288,"symbolsTime":"1 mins."},"categories":[{"name":"碎碎念","slug":"碎碎念","count":13,"path":"api/categories/碎碎念.json"}],"tags":[{"name":"堂弟结婚","slug":"堂弟结婚","count":1,"path":"api/tags/堂弟结婚.json"},{"name":"新年","slug":"新年","count":1,"path":"api/tags/新年.json"}],"author":{"name":"新风作浪","slug":"blog-author","avatar":"http://qiniu.niuxtech.cn/avatar.png","link":"/","description":"专注于你能控制的","socials":{"github":"https://github.com/duxinfeng","twitter":"https://twitter.com/iduxinfeng","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/duxinfeng2010","juejin":"","customs":{}}}},"next_post":{"title":"NSURL初始化失败","uid":"1efe54e5aa0e8949f28f0f75d6b8d827","slug":"NSURL初始化失败","date":"2016-01-14T16:36:01.000Z","updated":"2020-03-28T15:53:18.000Z","comments":true,"path":"api/articles/NSURL初始化失败.json","keywords":null,"cover":null,"text":"NSString *usrstring = @&quot;xxxxxx&quot;; NSURL *URL = [NSURL URLWithString:usrstring]; 有时候你会发现URL为nil;为什么呢？因为你的usrstring里包含中文或者其他什么文字，需要进行...","link":"","photos":[],"count_time":{"symbolsCount":368,"symbolsTime":"1 mins."},"categories":[{"name":"iOS","slug":"iOS","count":37,"path":"api/categories/iOS.json"}],"tags":[{"name":"NSURL","slug":"NSURL","count":2,"path":"api/tags/NSURL.json"}],"author":{"name":"新风作浪","slug":"blog-author","avatar":"http://qiniu.niuxtech.cn/avatar.png","link":"/","description":"专注于你能控制的","socials":{"github":"https://github.com/duxinfeng","twitter":"https://twitter.com/iduxinfeng","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/duxinfeng2010","juejin":"","customs":{}}}}}